@spacer-0: 0;
@spacer-1: 0.25rem;
@spacer-2: 0.5rem;
@spacer-3: 0.75rem;
@spacer-4: 1rem;
@spacer-5: 1.5rem;
@spacer-6: 2rem;
@spacer-7: 3rem;
@spacer-8: 4rem;
@spacer-9: 5rem;
@spacer-10: 6rem;
@spacer-11: 8rem;
@spacer-12: 10rem;
@spacer-13: 15rem;
@spacer-14: 20rem;
@spacer-15: 30rem;

@spacer-map:
    px 1px,
    0 @spacer-0,
    1 @spacer-1,
    2 @spacer-2,
    3 @spacer-3,
    4 @spacer-4,
    5 @spacer-5,
    6 @spacer-6,
    7 @spacer-7,
    8 @spacer-8,
    9 @spacer-9,
    10 @spacer-10,
    11 @spacer-11,
    12 @spacer-12,
    13 @spacer-13,
    14 @spacer-14,
    15 @spacer-15;

.apply-match(@map; @search; @ruleset) {
    @current: extract(extract(@map, 1), 1);
    .apply-match(@map; @search; @current; @ruleset; 1);
}

.apply-match(@map; @search; @current; @ruleset; @i) when not (@search = @current) and (@i <= length(@spacer-map)) {
    @current: extract(extract(@map, @i + 1), 1);
    .apply-match(@map; @search; @current; @ruleset; @i + 1);
}

.apply-match(@map; @search; @current; @ruleset; @i) when (@search = @current) and (@i <= length(@spacer-map)) {
    & {
        @__spacer-size: extract(extract(@map, @i), 2);
        @ruleset();
    }
}

.apply-spacer(@search; @ruleset) {
    .apply-match(@spacer-map; @search; @ruleset);
}

.pt(@spacer) { .apply-spacer(@spacer, { padding-top: @__spacer-size; }); }
.pr(@spacer) { .apply-spacer(@spacer, { padding-right: @__spacer-size; }); }
.pb(@spacer) { .apply-spacer(@spacer, { padding-bottom: @__spacer-size; }); }
.pl(@spacer) { .apply-spacer(@spacer, { padding-left: @__spacer-size; }); }
.py(@spacer) {
    .apply-spacer(@spacer, {
        padding-top: @__spacer-size;
        padding-bottom: @__spacer-size;
    });
}
.px(@spacer) {
    .apply-spacer(@spacer, {
        padding-right: @__spacer-size;
        padding-left: @__spacer-size;
    });
}
.p(@spacer) {
    .apply-spacer(@spacer, {
        padding-top: @__spacer-size;
        padding-right: @__spacer-size;
        padding-bottom: @__spacer-size;
        padding-left: @__spacer-size;
    });
}

.generate-padding-utilities(@i: 1) when (@i <= length(@spacer-map)) {
    @spacer: extract(@spacer-map, @i);

    @n: extract(@spacer, 1);
    @size: extract(@spacer, 2);

    .pt-@{n} { padding-top: @size; }
    .pr-@{n} { padding-right: @size; }
    .pb-@{n} { padding-bottom: @size; }
    .pl-@{n} { padding-left: @size; }
    .py-@{n} {
        padding-top: @size;
        padding-bottom: @size;
    }
    .px-@{n} {
        padding-right: @size;
        padding-left: @size;
    }
    .p-@{n} {
        padding-top: @size;
        padding-bottom: @size;
        padding-right: @size;
        padding-left: @size;
    }

    .generate-padding-utilities(@i + 1);
}

.generate-screen-padding-utilities(@screen; @screen-width; @i: 1) when (@i <= length(@spacer-map)) {
    @prefix: ~"@{screen}\:";
    @spacer: extract(@spacer-map, @i);
    @n: extract(@spacer, 1);
    @size: extract(@spacer, 2);

    @media (min-width: @screen-width) {
        .@{prefix}pt-@{n} { padding-top: @size; }
        .@{prefix}pr-@{n} { padding-right: @size; }
        .@{prefix}pb-@{n} { padding-bottom: @size; }
        .@{prefix}pl-@{n} { padding-left: @size; }
        .@{prefix}py-@{n} {
            padding-top: @size;
            padding-bottom: @size;
        }
        .@{prefix}px-@{n} {
            padding-right: @size;
            padding-left: @size;
        }
        .@{prefix}p-@{n} {
            padding-top: @size;
            padding-bottom: @size;
            padding-right: @size;
            padding-left: @size;
        }
    }

    .generate-screen-padding-utilities(@screen; @screen-width; (@i + 1));
}

.generate-responsive-padding-utilities(@i: 1) when (@i <= length(@screens)) {
    @screen: extract(@screens, @i);
    @name: extract(@screen, 1);
    @screen-width: extract(@screen, 3);

    .generate-screen-padding-utilities(@name, @screen-width);
    .generate-responsive-padding-utilities(@i + 1);
}

.mt(@spacer) { .apply-spacer(@spacer, { margin-top: @__spacer-size; }); }

.mr(@spacer) { .apply-spacer(@spacer, { margin-right: @__spacer-size; }); }
.mb(@spacer) { .apply-spacer(@spacer, { margin-bottom: @__spacer-size; }); }
.ml(@spacer) { .apply-spacer(@spacer, { margin-left: @__spacer-size; }); }
.my(@spacer) {
    .apply-spacer(@spacer, {
        margin-top: @__spacer-size;
        margin-bottom: @__spacer-size;
    });
}
.mx(@spacer) {
    .apply-spacer(@spacer, {
        margin-right: @__spacer-size;
        margin-left: @__spacer-size;
    });
}
.m(@spacer) {
    .apply-spacer(@spacer, {
        margin-top: @__spacer-size;
        margin-right: @__spacer-size;
        margin-bottom: @__spacer-size;
        margin-left: @__spacer-size;
    });
}

.generate-margin-utilities(@i: 1) when (@i <= length(@spacer-map)) {
    @spacer: extract(@spacer-map, @i);

    @n: extract(@spacer, 1);
    @size: extract(@spacer, 2);

    .mt-@{n} { margin-top: @size; }
    .mr-@{n} { margin-right: @size; }
    .mb-@{n} { margin-bottom: @size; }
    .ml-@{n} { margin-left: @size; }
    .my-@{n} {
        margin-top: @size;
        margin-bottom: @size;
    }
    .mx-@{n} {
        margin-right: @size;
        margin-left: @size;
    }
    .m-@{n} {
        margin-top: @size;
        margin-bottom: @size;
        margin-right: @size;
        margin-left: @size;
    }

    .generate-margin-utilities(@i + 1);
}

.generate-screen-margin-utilities(@screen; @screen-width; @i: 1) when (@i <= length(@spacer-map)) {
    @prefix: ~"@{screen}\:";
    @spacer: extract(@spacer-map, @i);
    @n: extract(@spacer, 1);
    @size: extract(@spacer, 2);

    @media (min-width: @screen-width) {
        .@{prefix}mt-@{n} { margin-top: @size; }
        .@{prefix}mr-@{n} { margin-right: @size; }
        .@{prefix}mb-@{n} { margin-bottom: @size; }
        .@{prefix}ml-@{n} { margin-left: @size; }
        .@{prefix}my-@{n} {
            margin-top: @size;
            margin-bottom: @size;
        }
        .@{prefix}mx-@{n} {
            margin-right: @size;
            margin-left: @size;
        }
        .@{prefix}m-@{n} {
            margin-top: @size;
            margin-bottom: @size;
            margin-right: @size;
            margin-left: @size;
        }
    }

    .generate-screen-margin-utilities(@screen; @screen-width; (@i + 1));
}

.generate-responsive-margin-utilities(@i: 1) when (@i <= length(@screens)) {
    @screen: extract(@screens, @i);
    @name: extract(@screen, 1);
    @screen-width: extract(@screen, 3);

    .generate-screen-margin-utilities(@name, @screen-width);

    @media (min-width: @screen-width) {
        @prefix: ~"@{name}\:";
        .@{prefix}mx-auto { margin-left: auto; margin-right: auto; }
    }

    .generate-responsive-margin-utilities(@i + 1);
}

.pull-t(@spacer) { .apply-spacer(@spacer, { margin-top: ~"-@{__spacer-size}"; }); }

.pull-r(@spacer) { .apply-spacer(@spacer, { margin-right: ~"-@{__spacer-size}"; }); }
.pull-b(@spacer) { .apply-spacer(@spacer, { margin-bottom: ~"-@{__spacer-size}"; }); }
.pull-l(@spacer) { .apply-spacer(@spacer, { margin-left: ~"-@{__spacer-size}"; }); }
.pull-y(@spacer) {
    .apply-spacer(@spacer, {
        margin-top: ~"-@{__spacer-size}";
        margin-bottom: ~"-@{__spacer-size}";
    });
}
.pull-x(@spacer) {
    .apply-spacer(@spacer, {
        margin-right: ~"-@{__spacer-size}";
        margin-left: ~"-@{__spacer-size}";
    });
}
.pull(@spacer) {
    .apply-spacer(@spacer, {
        margin-top: ~"-@{__spacer-size}";
        margin-right: ~"-@{__spacer-size}";
        margin-bottom: ~"-@{__spacer-size}";
        margin-left: ~"-@{__spacer-size}";
    });
}

.generate-pull-utilities(@i: 1) when (@i <= length(@spacer-map)) {
    @spacer: extract(@spacer-map, @i);

    @n: extract(@spacer, 1);
    @size: extract(@spacer, 2);

    .pull-t-@{n} { margin-top: ~"-@{size}"; }
    .pull-r-@{n} { margin-right: ~"-@{size}"; }
    .pull-b-@{n} { margin-bottom: ~"-@{size}"; }
    .pull-l-@{n} { margin-left: ~"-@{size}"; }
    .pull-y-@{n} {
        margin-top: ~"-@{size}";
        margin-bottom: ~"-@{size}";
    }
    .pull-x-@{n} {
        margin-right: ~"-@{size}";
        margin-left: ~"-@{size}";
    }
    .pull-@{n} {
        margin-top: ~"-@{size}";
        margin-bottom: ~"-@{size}";
        margin-right: ~"-@{size}";
        margin-left: ~"-@{size}";
    }

    .generate-pull-utilities(@i + 1);
}

.generate-screen-pull-utilities(@screen; @screen-width; @i: 1) when (@i <= length(@spacer-map)) {
    @prefix: ~"@{screen}\:";
    @spacer: extract(@spacer-map, @i);
    @n: extract(@spacer, 1);
    @size: extract(@spacer, 2);

    @media (min-width: @screen-width) {
        .@{prefix}pull-t-@{n} { margin-top: ~"-@{size}";; }
        .@{prefix}pull-r-@{n} { margin-right: ~"-@{size}";; }
        .@{prefix}pull-b-@{n} { margin-bottom: ~"-@{size}";; }
        .@{prefix}pull-l-@{n} { margin-left: ~"-@{size}";; }
        .@{prefix}pull-y-@{n} {
            margin-top: ~"-@{size}";;
            margin-bottom: ~"-@{size}";;
        }
        .@{prefix}pull-x-@{n} {
            margin-right: ~"-@{size}";;
            margin-left: ~"-@{size}";;
        }
        .@{prefix}pull-@{n} {
            margin-top: ~"-@{size}";;
            margin-bottom: ~"-@{size}";;
            margin-right: ~"-@{size}";;
            margin-left: ~"-@{size}";;
        }
    }

    .generate-screen-pull-utilities(@screen; @screen-width; (@i + 1));
}

.generate-responsive-pull-utilities(@i: 1) when (@i <= length(@screens)) {
    @screen: extract(@screens, @i);
    @name: extract(@screen, 1);
    @screen-width: extract(@screen, 3);

    .generate-screen-pull-utilities(@name, @screen-width);
    .generate-responsive-pull-utilities(@i + 1);
}


.generate-padding-utilities();
.generate-margin-utilities();
.generate-pull-utilities();
.mx-auto { margin-left: auto; margin-right: auto; }

.generate-responsive-padding-utilities();
.generate-responsive-margin-utilities();
.generate-responsive-pull-utilities();
