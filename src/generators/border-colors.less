.generate-border-color-utility(@name; @variant; @color) when (@variant = 'default') {
  .define-selector(~"border-@{name}"; { border-color: @color; });
}

.generate-border-color-utility(@name; @variant; @color) when not (@variant = 'default') {
  .define-selector(~"border-@{name}-@{variant}"; { border-color: @color; });
}

.generate-border-color-utilities(@color-name; @color-variants; @i: 1) when (@i <= length(@color-variants)) and (length(extract(@color-variants, @i)) = 1) {
  @variant-name: extract(@color-variants, 1);
  @variant-color: extract(@color-variants, 2);

  .generate-border-color-utility(@color-name; @variant-name; @variant-color);
}

.generate-border-color-utilities(@color-name; @color-variants; @i: 1) when (@i <= length(@color-variants)) and (length(extract(@color-variants, @i)) = 2) {
  @variant: extract(@color-variants, @i);
  @variant-name: extract(@variant, 1);
  @variant-color: extract(@variant, 2);

  .generate-border-color-utility(@color-name; @variant-name; @variant-color);
  .generate-border-color-utilities(@color-name; @color-variants; @i + 1);
}

.define-border-color(@color-name; @color-variants) {
    .generate-border-color-utilities(@color-name; @color-variants);
}
